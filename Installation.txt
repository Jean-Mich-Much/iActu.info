Mon pense pas b√™te pour installer, instructions en vrac... presque dans l'ordre üòä : 

(le site sera install√© dans le dossier "/_")

root
mot de passe √† d√©finir

Nom de domaine / ip / √† r√©cup√©rer :
51.38.xxx.xxx
2001:41d0:xxx:xxx::xxxx

cd /tmp
sudo su
passwd
passwd ubuntu
passwd root

Modifier le fichier sshd_config :
nano /etc/ssh/sshd_config

Ajouter la ligne suivante :
PermitRootLogin yes

Commenter cette ligne :
#PermitRootLogin prohibit-password

Red√©marrer le service SSH :
systemctl restart sshd

Installation serveur Caddy + PHP sur Ubuntu 22.04 :
clear
ps aux | sort -rnk 5 | head -48
systemctl -at service
systemctl --type=service --state=running
free -m

crontab -u root -e
crontab -u caddy -e

cat /proc/cpuinfo

dpkg-reconfigure locales
locale-gen "fr_FR.UTF-8"
dpkg-reconfigure tzdata
export LANG=fr_FR.UTF-8
export LANGUAGE=fr_FR.UTF-8
update-locale LANG=fr_FR.UTF-8
clear
locale
env
	
Premi√®re installation :
cd /tmp
apt update
apt upgrade -y
apt autoremove --purge -y

 cd /tmp && rm -r -f -v /_/ && mkdir -p /_ && chown -R caddy:caddy /_ && find /_ -type d -exec chmod 777 {} + && find /_ -type f -exec chmod 777 {} +
 cd /tmp && rm -r -f -v /_backup/ && mkdir -p /_backup && chown -R root:root /_backup && find /_backup -type d -exec chmod 777 {} + && find /_backup -type f -exec chmod 777 {} +

sudo apt-get install -y 7zip advancecomp apt-transport-https aspell-fr autoconf automake bison btop build-essential byacc bzip2 ca-certificates clang cron curl debian-archive-keyring debian-keyring dirmngr dnsutils file flex fonts-noto-color-emoji fonts-open-sans gcc gettext git gnupg2 go-dqlite golang-go gzip handbrake htop icu-devtools imagemagick jq libcurl4-openssl-dev libffi-dev libreadline-dev libssl-dev libxml2-dev libxslt-dev libzstd-dev lsb-release lz4 lzop make manpages-fr nano neofetch net-tools p7zip-full p7zip-rar pigz pixz pkg-config plocate putty python3 python3-aiodns python3-aiohttp python3-cffi python3-dev python3-distutils-extra python3-dns python3-dnspython python3-lxml python3-pil python3-pillow python3-pip python3-pycares python3-requests python3-requests-cache python3-testresources python3-venv python3-zstd rzip rust-all sqlite3 sshguard strace tar tree ufw unrar unzip uuid-dev webp wget whois xz-utils zlib1g-dev zpaq zstd && sudo apt autoremove --purge -y && sudo apt-get -y autoclean && sudo apt-get -y autoremove --fix-broken && sudo apt-get purge

apt-get install -y php8.3 php8.3-bcmath php8.3-bz2 php8.3-cgi php8.3-cli php8.3-common php8.3-curl php8.3-dba php8.3-fpm php8.3-mbstring php8.3-odbc php8.3-opcache php8.3-sqlite3 php8.3-xml php8.3-zip && apt-get -y autoclean && apt-get -y autoremove --fix-broken && apt-get purge
systemctl restart php8.3-fpm.service

Caddy :
curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list
apt update
apt install -y caddy
systemctl restart caddy.service

FreshRss : :
Utilisateur : nom √† d√©finir
Mot de passe : mot de passe √† d√©finir
cd / && cd /_ && rm -f /_/1.26.3.zip && rm -r -f -v /_/g/ && rm -r -f -v /_/recherche/ && wget https://github.com/FreshRSS/FreshRSS/archive/refs/tags/1.26.3.zip && unzip /_/1.26.3.zip && mv FreshRSS-1.26.3 /_/g && find /_/g -type d -exec chmod 777 {} + && find /_/g -type f -exec chmod 777 {} + && rm -f /_/1.26.3.zip && mv /_/g /_/recherche && chown -R caddy:caddy /_/recherche && find /_/recherche -type d -exec chmod 777 {} + && find /_/recherche -type f -exec chmod 777 {} + && find /_/recherche -type d -exec chmod 777 {} + && find /_/recherche -type f -exec chmod 777 {} +

Maintenance :
cd /tmp
chown -R caddy:caddy /_ && find /_ -type d -exec chmod 777 {} + && find /_ -type f -exec chmod 777 {} + && find /_ -type d -exec chmod 777 {} + && find /_ -type f -exec chmod 777 {} +
apt update
apt autoremove --purge -y
apt clean -y
apt upgrade -y
apt autoremove --purge -y
apt clean -y
systemctl stop php8.3-fpm && sleep 2 && systemctl stop caddy && sleep 2 && sync && sleep 5 && shutdown -r now

Backup site :
tar -Jcf /_backup/backup.tar.xz /_/ /dev/null 2>&1

Restaurer et d√©compresser avec zstd :
cd /_/
rm -r -f -v /_/*
cp /_backup/backup.tar.zst /_/backup.tar.zst
tar --use-compress-program="zstd" -xf backup.tar.zst
rm -r -f -v /_/dev
cd /_/_/
mv * /_/
rm -r -f -v /_/_
chown -R caddy:caddy /_ && find /_ -type d -exec chmod 777 {} + && find /_ -type f -exec chmod 777 {} +
cd /_
rm -r -f -v /_/backup.tar.zst
echo "Restauration termin√©e"

Ufw :
ufw default deny
ufw allow ssh/tcp
ufw allow 20
ufw allow 21
ufw allow 22
ufw allow 25
ufw allow 53
ufw allow 80
ufw allow 110
ufw allow 123
ufw allow 143
ufw allow 161
ufw allow 443
ufw allow 995
ufw allow 1022/tcp
ufw allow 1433
ufw allow 1434
ufw allow 3306
ufw allow 3389
ufw allow 4333
ufw allow 5432
ufw allow 5500
ufw allow 6000:6007/tcp
ufw allow 6000:6007/udp
ufw allow 6556
ufw allow 8080
ufw allow ntp
ufw allow proto tcp from any to any port 80,443
ufw allow http/tcp
ufw allow https/tcp
ufw allow ssh
ufw logging off
ufw enable
ufw reload
ufw status

SSHGuard :
apt install -y sshguard

Lignes √† ajouter dans ufw :
nano /etc/ufw/before.rules
:sshguard - [0:0]
-A ufw-before-input -p tcp --dport 22 -j sshguard
ufw reload

Liste blanche :
nano /etc/sshguard/whitelist
votre ip en plus du reste

Voir les dossiers dans /etc et /var (configuration php / caddy / cron.d et autres crons, remplacez par le bon nom de domaine dans le fichier de config de caddy, voir les crons dans var et adaptez pour votre serveur)

Reboot gracefull : 
59 2 * * * systemctl stop php8.3-fpm && sleep 2 && systemctl stop caddy && sleep 2 && sync && sleep 5 && shutdown -r now
